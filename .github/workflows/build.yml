name: build
on:
- push
- workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    name: Run Build
    outputs:
      semver: ${{ steps.run_build.outputs.SemVer }}
      major: ${{ steps.run_build.outputs.Major }}
      majorMinor: ${{ steps.run_build.outputs.Major }}.${{ steps.run_build.outputs.Minor }}
      preReleaseTag: ${{ steps.run_build.outputs.PreReleaseTag }}
    steps:
    # Setup steps
    - uses: actions/setup-dotnet@v1
      if: ${{ github.actor != 'nektos/act' }}
      name: Install .NET Core SDK 3.1.x
      with:
        dotnet-version: '3.1.x'
    - uses: actions/setup-dotnet@v1
      if: ${{ github.actor != 'nektos/act' }}
      name: Install .NET Core SDK 5.0.x
      with:
        dotnet-version: '5.0.x'
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    # Build steps
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - id: run_build
      run: |
        pwsh -f ./build.ps1

    # Publishing steps
    - name: Publish NuGet Package(s)
      run: |
        dir _packages/
        #nuget sources add -name github -source "https://nuget.pkg.github.com/corvus-dotnet/index.json"
        #nuget push **/*.nupkg -Source github -ApiKey "${{ env.GITHUB_API_KEY }}"
        #dotnet nuget add source --name github "https://nuget.pkg.github.com/corvus-dotnet/index.json"
        #dotnet nuget push "**/*.nupkg" --source github --api-key "${{ env.GITHUB_API_KEY }}" --skip-duplicate
        dotnet nuget push "_packages/*.nupkg" --api-key "${GITHUB_TOKEN}" --source "https://nuget.pkg.github.com/corvus-dotnet/index.json" --skip-duplicate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Publish NuGet Package(s)
      if: ${{ startsWith(github.event.ref, 'refs/tags/') }}
      run: |
        nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.ENDJIN_NUGET_APIKEY}}



